{% doc %}
  @prompt
    Create a metaobject list section that filters and displays only red-colored metaobjects, with customizable styling options for showcasing the filtered content

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-metaobject-list-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.spacing }}px;
    padding: {{ block.settings.padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-metaobject-list-header-{{ ai_gen_id }} {
    margin-bottom: {{ block.settings.header_spacing }}px;
    text-align: {{ block.settings.text_alignment }};
  }

  .ai-metaobject-list-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.title_color }};
    margin: 0 0 10px 0;
  }

  .ai-metaobject-list-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.text_color }};
  }

  .ai-metaobject-list-items-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.columns_desktop }}, 1fr);
    gap: {{ block.settings.item_spacing }}px;
  }

  .ai-metaobject-list-item-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    background-color: {{ block.settings.item_background_color }};
    border-radius: {{ block.settings.item_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, {{ block.settings.shadow_opacity | divided_by: 100.0 }});
    transition: transform 0.3s ease;
  }

  {% if block.settings.enable_hover_effect %}
  .ai-metaobject-list-item-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
  }
  {% endif %}

  .ai-metaobject-list-item-image-container-{{ ai_gen_id }} {
    width: 100%;
    position: relative;
    padding-bottom: {{ block.settings.image_aspect_ratio }}%;
  }

  .ai-metaobject-list-item-image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: {{ block.settings.image_fit }};
  }

  .ai-metaobject-list-item-image-container-{{ ai_gen_id }} svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
  }

  .ai-metaobject-list-item-content-{{ ai_gen_id }} {
    padding: {{ block.settings.item_padding }}px;
  }

  .ai-metaobject-list-item-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.item_title_size }}px;
    color: {{ block.settings.item_title_color }};
    margin: 0 0 8px 0;
  }

  .ai-metaobject-list-item-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.item_text_size }}px;
    color: {{ block.settings.item_text_color }};
  }

  .ai-metaobject-list-empty-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.description_size }}px;
  }

  @media screen and (max-width: 749px) {
    .ai-metaobject-list-items-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
    }
  }
{% endstyle %}

<div class="ai-metaobject-list-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.title != blank or block.settings.description != blank %}
    <div class="ai-metaobject-list-header-{{ ai_gen_id }}">
      {% if block.settings.title != blank %}
        <h2 class="ai-metaobject-list-title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
      {% endif %}
      
      {% if block.settings.description != blank %}
        <div class="ai-metaobject-list-description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
      {% endif %}
    </div>
  {% endif %}

  {% assign filtered_metaobjects = "" | split: "" %}
  {% assign metaobject_type = block.settings.metaobject_type %}
  
  {% if metaobject_type != blank %}
    {% for metaobject in metaobjects[metaobject_type] %}
      {% if metaobject.color.value == "red" or metaobject.color.value == "#ff0000" or metaobject.color.value == "#f00" or metaobject.color.value contains "red" %}
        {% assign filtered_metaobjects = filtered_metaobjects | append: metaobject %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if filtered_metaobjects.size > 0 %}
    <div class="ai-metaobject-list-items-{{ ai_gen_id }}">
      {% for metaobject in filtered_metaobjects %}
        <div class="ai-metaobject-list-item-{{ ai_gen_id }}">
          <div class="ai-metaobject-list-item-image-container-{{ ai_gen_id }}">
            {% if metaobject.image.value != blank %}
              <img
                src="{{ metaobject.image.value | image_url: width: 500 }}"
                alt="{{ metaobject.image.value.alt | escape }}"
                loading="lazy"
                class="ai-metaobject-list-item-image-{{ ai_gen_id }}"
              >
            {% else %}
              {{ 'image' | placeholder_svg_tag }}
            {% endif %}
          </div><div class="ai-metaobject-list-item-content-{{ ai_gen_id }}">
            {% if metaobject.title.value != blank %}
              <h3 class="ai-metaobject-list-item-title-{{ ai_gen_id }}">{{ metaobject.title.value }}</h3>
            {% endif %}
            
            {% if metaobject.description.value != blank %}
              <div class="ai-metaobject-list-item-description-{{ ai_gen_id }}">{{ metaobject.description.value }}</div>
            {% endif %}
          </div>
        </div>
      {% endfor %}
    </div>
  {% else %}
    <div class="ai-metaobject-list-empty-{{ ai_gen_id }}">
      {{ block.settings.empty_message }}
    </div>
  {% endif %}
</div>

{% schema %}
{
  "name": "Red Metaobject List",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Red Collection"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Explore our collection of red items</p>"
    },
    {
      "type": "text",
      "id": "empty_message",
      "label": "Empty message",
      "default": "No red items found"
    },
    {
      "type": "text",
      "id": "metaobject_type",
      "label": "Metaobject type",
      "info": "Enter the metaobject definition type (e.g., 'product_feature')",
      "default": "product_feature"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Columns on desktop",
      "default": 3
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "spacing",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Section spacing",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Section padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "header_spacing",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Header spacing",
      "default": 20
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Item spacing",
      "default": 20
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 28
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 28,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Item Style"
    },
    {
      "type": "color",
      "id": "item_background_color",
      "label": "Item background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "item_title_color",
      "label": "Item title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "item_text_color",
      "label": "Item text color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "item_title_size",
      "min": 12,
      "max": 36,
      "step": 1,
      "unit": "px",
      "label": "Item title size",
      "default": 18
    },
    {
      "type": "range",
      "id": "item_text_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Item text size",
      "default": 14
    },
    {
      "type": "range",
      "id": "item_padding",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Item padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "item_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Item border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "shadow_opacity",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "%",
      "label": "Shadow opacity",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "enable_hover_effect",
      "label": "Enable hover effect",
      "default": true
    },
    {
      "type": "header",
      "content": "Image Settings"
    },
    {
      "type": "range",
      "id": "image_aspect_ratio",
      "min": 40,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Image aspect ratio",
      "default": 65
    },
    {
      "type": "select",
      "id": "image_fit",
      "label": "Image fit",
      "options": [
        {
          "value": "cover",
          "label": "Cover"
        },
        {
          "value": "contain",
          "label": "Contain"
        }
      ],
      "default": "cover"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Section border radius",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "Red Metaobject List"
    }
  ]
}
{% endschema %}